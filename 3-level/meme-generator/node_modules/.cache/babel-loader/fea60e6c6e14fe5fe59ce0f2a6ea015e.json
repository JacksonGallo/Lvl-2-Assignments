{"ast":null,"code":"var _jsxFileName = \"/home/jackson/development/V-School-Assignments/3-level/meme-generator/src/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"https:\\/\\/i.imgflip.com\\/1ur9b0.jpg\"\n  });\n  const [memeAPI, setMemeAPI] = React.useState([]);\n  React.useEffect(() => {\n    axios.get(\"https://api.imgflip.com/get_memes\").then(res => setMemeAPI(respons));\n  });\n\n  function getNewImage() {\n    console.log(\"got image\");\n    const randomNum = Math.floor(Math.random() * memeAPI.length);\n    const newImage = memeAPI[randomNum].url;\n    setMeme(prev => ({ ...prev,\n      randomImage: newImage\n    }));\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"topText\",\n        className: \"form--input\",\n        placeholder: \"Top Text\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"bottomText\",\n        className: \"form--input\",\n        placeholder: \"Bottom Text\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getNewImage,\n        children: \"Get New Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        children: \"Add to List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview--meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"preview--meme--image\",\n        src: meme.randomImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"preview--meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"preview--meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"axz6koDrVMZ9kn942EIiUuM2/HE=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"sources":["/home/jackson/development/V-School-Assignments/3-level/meme-generator/src/Meme.js"],"names":["React","axios","Meme","meme","setMeme","useState","topText","bottomText","randomImage","memeAPI","setMemeAPI","useEffect","get","then","res","respons","getNewImage","console","log","randomNum","Math","floor","random","length","newImage","url","prev","handleChange","event","name","value","target","prevMeme"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport axios from \"axios\"\n\nexport default function Meme(){\n\n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"https:\\/\\/i.imgflip.com\\/1ur9b0.jpg\"\n    })\n\n    const [memeAPI, setMemeAPI] = React.useState([])\n\n    React.useEffect(() => {\n        axios.get(\"https://api.imgflip.com/get_memes\")\n        .then(res => setMemeAPI(respons))\n    })\n\n    function getNewImage(){\n        console.log(\"got image\")\n\n        const randomNum = Math.floor(Math.random() * memeAPI.length);\n        const newImage = memeAPI[randomNum].url\n        setMeme(prev => ({\n            ...prev,\n            randomImage: newImage\n        }))\n    }\n\n    function handleChange(event){\n        const {name, value} = event.target\n\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        }))\n    }\n\n    return(\n        <section>\n\n            <div className=\"form\">\n\n                <input \n                    type=\"text\"\n                    name=\"topText\"\n                    className=\"form--input\"\n                    placeholder=\"Top Text\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n\n                <input \n                    type=\"text\"\n                    name=\"bottomText\"\n                    className=\"form--input\"\n                    placeholder=\"Bottom Text\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n                />\n\n                <button \n                className=\"form--button\"\n                onClick={getNewImage}\n                >\n                    Get New Image\n                </button>\n\n                <button className=\"form--button\">Add to List</button>\n\n            </div>\n\n            <div className=\"preview--meme\">\n                <img className=\"preview--meme--image\" src={meme.randomImage}/>\n                <h2 className=\"preview--meme--text top\">{meme.topText}</h2>\n                <h2 className=\"preview--meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}