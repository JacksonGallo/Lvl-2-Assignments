{"ast":null,"code":"var _jsxFileName = \"/home/jackson/development/V-School-Assignments/3-level/meme-generator/src/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport CreatedMeme from \"./CreatedMeme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  //initial set up for meme\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"https:\\/\\/i.imgflip.com\\/1ur9b0.jpg\"\n  }); //live updates to state meme\n\n  function handleChange(event) {\n    event.preventDefault();\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    })); //console.log(meme)\n  } //state for interacting with API\n\n\n  const [memeAPI, setMemeAPI] = React.useState([]); //GET request\n\n  React.useEffect(() => {\n    axios.get(\"https://api.imgflip.com/get_memes\").then(response => setMemeAPI(response.data.data.memes)); //console.log(\"use effect\")\n  }, []); //get new image when button pressed\n\n  function getNewImage(event) {\n    event.preventDefault();\n    const randomNum = Math.floor(Math.random() * memeAPI.length);\n    const newImage = memeAPI[randomNum].url;\n    setMeme(prev => ({ ...prev,\n      randomImage: newImage\n    }));\n  } //pushing data from 'form' into mappable array, and then putting that info into imported component\n\n\n  const [newMeme, setNewMeme] = React.useState([]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setNewMeme(prev => [...prev, meme]);\n  }\n\n  const createdMemeList = newMeme.map((item, index) => {\n    //console.log(\"createdmeme\")\n    return /*#__PURE__*/_jsxDEV(CreatedMeme, {\n      things: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"topText\",\n        className: \"form--input\",\n        placeholder: \"Top Text\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"bottomText\",\n        className: \"form--input\",\n        placeholder: \"Bottom Text\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getNewImage,\n        children: \"Get New Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: handleSubmit,\n        children: \"Create Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview--meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"preview--meme--image\",\n        src: meme.randomImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"preview--meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"preview--meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), createdMemeList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"H82eQ3LKTzDekleV4bi9cw2oydI=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"sources":["/home/jackson/development/V-School-Assignments/3-level/meme-generator/src/Meme.js"],"names":["React","axios","CreatedMeme","Meme","meme","setMeme","useState","topText","bottomText","randomImage","handleChange","event","preventDefault","name","value","target","prevMeme","memeAPI","setMemeAPI","useEffect","get","then","response","data","memes","getNewImage","randomNum","Math","floor","random","length","newImage","url","prev","newMeme","setNewMeme","handleSubmit","createdMemeList","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC1B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAe;AACnCC,IAAAA,OAAO,EAAE,EAD0B;AAEnCC,IAAAA,UAAU,EAAE,EAFuB;AAGnCC,IAAAA,WAAW,EAAE;AAHsB,GAAf,CAAxB,CAF0B,CAQ1B;;AACA,WAASC,YAAT,CAAsBC,KAAtB,EAA4B;AACxBA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBH,KAAK,CAACI,MAA5B;AAEAV,IAAAA,OAAO,CAACW,QAAQ,KAAK,EACjB,GAAGA,QADc;AAEjB,OAACH,IAAD,GAAQC;AAFS,KAAL,CAAT,CAAP,CALwB,CAUxB;AACH,GApByB,CAsB1B;;;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBlB,KAAK,CAACM,QAAN,CAAe,EAAf,CAA9B,CAvB0B,CAyB1B;;AACAN,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AAClBlB,IAAAA,KAAK,CAACmB,GAAN,CAAU,mCAAV,EACCC,IADD,CACMC,QAAQ,IAAIJ,UAAU,CAACI,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,KAApB,CAD5B,EADkB,CAGlB;AACH,GAJD,EAIE,EAJF,EA1B0B,CAgC1B;;AACA,WAASC,WAAT,CAAqBd,KAArB,EAA2B;AACvBA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMc,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,OAAO,CAACa,MAAnC,CAAlB;AAEA,UAAMC,QAAQ,GAAGd,OAAO,CAACS,SAAD,CAAP,CAAmBM,GAApC;AAEA3B,IAAAA,OAAO,CAAC4B,IAAI,KAAK,EACb,GAAGA,IADU;AAEbxB,MAAAA,WAAW,EAAEsB;AAFA,KAAL,CAAL,CAAP;AAIH,GA5CyB,CA+C1B;;;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBnC,KAAK,CAACM,QAAN,CAAe,EAAf,CAA9B;;AAEA,WAAS8B,YAAT,CAAsBzB,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACC,cAAN;AAEAuB,IAAAA,UAAU,CAACF,IAAI,IACX,CACI,GAAGA,IADP,EAEI7B,IAFJ,CADM,CAAV;AAMH;;AAED,QAAMiC,eAAe,GAAGH,OAAO,CAACI,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjD;AACA,wBACI,QAAC,WAAD;AAEI,MAAA,MAAM,EAAED;AAFZ,OACSC,KADT;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GATuB,CAAxB;AAWA,sBACI;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,WAAW,EAAC,UAJhB;AAKI,QAAA,KAAK,EAAEpC,IAAI,CAACG,OALhB;AAMI,QAAA,QAAQ,EAAEG;AANd;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,YAFT;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,WAAW,EAAC,aAJhB;AAKI,QAAA,KAAK,EAAEN,IAAI,CAACI,UALhB;AAMI,QAAA,QAAQ,EAAEE;AANd;AAAA;AAAA;AAAA;AAAA,cAXJ,eAoBI;AACA,QAAA,SAAS,EAAC,cADV;AAEA,QAAA,OAAO,EAAEe,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ,eA2BI;AACA,QAAA,SAAS,EAAC,cADV;AAEA,QAAA,OAAO,EAAEW,YAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAsCI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAsC,QAAA,GAAG,EAAEhC,IAAI,CAACK;AAAhD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,yBAAd;AAAA,kBAAyCL,IAAI,CAACG;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAI,QAAA,SAAS,EAAC,4BAAd;AAAA,kBAA4CH,IAAI,CAACI;AAAjD;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCJ,EA4CK6B,eA5CL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH;;GAzHuBlC,I;;KAAAA,I","sourcesContent":["import React from \"react\"\nimport axios from \"axios\"\nimport CreatedMeme from \"./CreatedMeme\"\n\nexport default function Meme(){\n    //initial set up for meme\n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"https:\\/\\/i.imgflip.com\\/1ur9b0.jpg\"\n    })\n\n    //live updates to state meme\n    function handleChange(event){\n        event.preventDefault()\n\n        const {name, value} = event.target\n\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        }))\n\n        //console.log(meme)\n    }\n\n    //state for interacting with API\n    const [memeAPI, setMemeAPI] = React.useState([])\n\n    //GET request\n    React.useEffect(() => {\n        axios.get(\"https://api.imgflip.com/get_memes\")\n        .then(response => setMemeAPI(response.data.data.memes))\n        //console.log(\"use effect\")\n    },[])\n\n    //get new image when button pressed\n    function getNewImage(event){\n        event.preventDefault()\n\n        const randomNum = Math.floor(Math.random() * memeAPI.length);\n\n        const newImage = memeAPI[randomNum].url\n\n        setMeme(prev => ({\n            ...prev,\n            randomImage: newImage\n        }))\n    }\n\n\n    //pushing data from 'form' into mappable array, and then putting that info into imported component\n    const [newMeme, setNewMeme] = React.useState([])\n\n    function handleSubmit(event) {\n        event.preventDefault()\n\n        setNewMeme(prev => (\n            [\n                ...prev,\n                meme\n            ]\n        ))\n    }\n\n    const createdMemeList = newMeme.map((item, index) => {\n        //console.log(\"createdmeme\")\n        return(\n            <CreatedMeme\n                key={index}\n                things={item}\n            />\n        )\n        \n    })\n\n    return(\n        <section>\n\n            <div className=\"form\">\n\n                <input \n                    type=\"text\"\n                    name=\"topText\"\n                    className=\"form--input\"\n                    placeholder=\"Top Text\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n\n                <input \n                    type=\"text\"\n                    name=\"bottomText\"\n                    className=\"form--input\"\n                    placeholder=\"Bottom Text\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n                />\n\n                <button \n                className=\"form--button\"\n                onClick={getNewImage}\n                >\n                    Get New Image\n                </button>\n\n                <button \n                className=\"form--button\"\n                onClick={handleSubmit}\n                >\n                    Create Meme\n                </button>\n\n            </div>\n\n            <div className=\"preview--meme\">\n                <img className=\"preview--meme--image\" src={meme.randomImage}/>\n                <h2 className=\"preview--meme--text top\">{meme.topText}</h2>\n                <h2 className=\"preview--meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n            \n            {createdMemeList}\n\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}