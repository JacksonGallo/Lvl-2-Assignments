{"ast":null,"code":"var _jsxFileName = \"/home/jackson/development/V-School-Assignments/3-level/meme-generator/src/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  //initial set up for meme\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"https:\\/\\/i.imgflip.com\\/1ur9b0.jpg\"\n  }); //state for interacting with API\n\n  const [memeAPI, setMemeAPI] = React.useState([]); //GET request\n\n  React.useEffect(() => {\n    axios.get(\"https://api.imgflip.com/get_memes\").then(response => setMemeAPI(response.data.data.memes)); //console.log(\"use effect\")\n  }, []); //get new image when button pressed\n\n  function getNewImage(event) {\n    event.preventDefault();\n    const randomNum = Math.floor(Math.random() * memeAPI.length);\n    const newImage = memeAPI[randomNum].url;\n    setMeme(prev => ({ ...prev,\n      randomImage: newImage\n    }));\n  } //live updates to state\n\n\n  function handleChange(event) {\n    event.preventDefault();\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    })); //console.log(meme)\n  }\n\n  const createdMeme = meme.map();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"topText\",\n        className: \"form--input\",\n        placeholder: \"Top Text\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"bottomText\",\n        className: \"form--input\",\n        placeholder: \"Bottom Text\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getNewImage,\n        children: \"Get New Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\" // onClick={createMeme}\n        ,\n        children: \"Create Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview--meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"preview--meme--image\",\n        src: meme.randomImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"preview--meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"preview--meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"axz6koDrVMZ9kn942EIiUuM2/HE=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"sources":["/home/jackson/development/V-School-Assignments/3-level/meme-generator/src/Meme.js"],"names":["React","axios","Meme","meme","setMeme","useState","topText","bottomText","randomImage","memeAPI","setMemeAPI","useEffect","get","then","response","data","memes","getNewImage","event","preventDefault","randomNum","Math","floor","random","length","newImage","url","prev","handleChange","name","value","target","prevMeme","createdMeme","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC1B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe;AACnCC,IAAAA,OAAO,EAAE,EAD0B;AAEnCC,IAAAA,UAAU,EAAE,EAFuB;AAGnCC,IAAAA,WAAW,EAAE;AAHsB,GAAf,CAAxB,CAF0B,CAQ1B;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,KAAK,CAACK,QAAN,CAAe,EAAf,CAA9B,CAT0B,CAW1B;;AACAL,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AAClBV,IAAAA,KAAK,CAACW,GAAN,CAAU,mCAAV,EACCC,IADD,CACMC,QAAQ,IAAIJ,UAAU,CAACI,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,KAApB,CAD5B,EADkB,CAGlB;AACH,GAJD,EAIE,EAJF,EAZ0B,CAkB1B;;AACA,WAASC,WAAT,CAAqBC,KAArB,EAA2B;AACvBA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBd,OAAO,CAACe,MAAnC,CAAlB;AAEA,UAAMC,QAAQ,GAAGhB,OAAO,CAACW,SAAD,CAAP,CAAmBM,GAApC;AAEAtB,IAAAA,OAAO,CAACuB,IAAI,KAAK,EACb,GAAGA,IADU;AAEbnB,MAAAA,WAAW,EAAEiB;AAFA,KAAL,CAAL,CAAP;AAIH,GA9ByB,CAgC1B;;;AACA,WAASG,YAAT,CAAsBV,KAAtB,EAA4B;AACxBA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAM;AAACU,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBZ,KAAK,CAACa,MAA5B;AAEA3B,IAAAA,OAAO,CAAC4B,QAAQ,KAAK,EACjB,GAAGA,QADc;AAEjB,OAACH,IAAD,GAAQC;AAFS,KAAL,CAAT,CAAP,CALwB,CAUxB;AACH;;AAEF,QAAMG,WAAW,GAAG9B,IAAI,CAAC+B,GAAL,EAApB;AAEC,sBACI;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,WAAW,EAAC,UAJhB;AAKI,QAAA,KAAK,EAAE/B,IAAI,CAACG,OALhB;AAMI,QAAA,QAAQ,EAAEsB;AANd;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,YAFT;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,WAAW,EAAC,aAJhB;AAKI,QAAA,KAAK,EAAEzB,IAAI,CAACI,UALhB;AAMI,QAAA,QAAQ,EAAEqB;AANd;AAAA;AAAA;AAAA;AAAA,cAXJ,eAoBI;AACA,QAAA,SAAS,EAAC,cADV;AAEA,QAAA,OAAO,EAAEX,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ,eA2BI;AACA,QAAA,SAAS,EAAC,cADV,CAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAsCI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAsC,QAAA,GAAG,EAAEd,IAAI,CAACK;AAAhD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,yBAAd;AAAA,kBAAyCL,IAAI,CAACG;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAI,QAAA,SAAS,EAAC,4BAAd;AAAA,kBAA4CH,IAAI,CAACI;AAAjD;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH;;GAjGuBL,I;;KAAAA,I","sourcesContent":["import React from \"react\"\nimport axios from \"axios\"\n\nexport default function Meme(){\n    //initial set up for meme\n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"https:\\/\\/i.imgflip.com\\/1ur9b0.jpg\"\n    })\n\n    //state for interacting with API\n    const [memeAPI, setMemeAPI] = React.useState([])\n\n    //GET request\n    React.useEffect(() => {\n        axios.get(\"https://api.imgflip.com/get_memes\")\n        .then(response => setMemeAPI(response.data.data.memes))\n        //console.log(\"use effect\")\n    },[])\n\n    //get new image when button pressed\n    function getNewImage(event){\n        event.preventDefault()\n\n        const randomNum = Math.floor(Math.random() * memeAPI.length);\n\n        const newImage = memeAPI[randomNum].url\n\n        setMeme(prev => ({\n            ...prev,\n            randomImage: newImage\n        }))\n    }\n\n    //live updates to state\n    function handleChange(event){\n        event.preventDefault()\n\n        const {name, value} = event.target\n\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        }))\n\n        //console.log(meme)\n    }\n\n   const createdMeme = meme.map()\n\n    return(\n        <section>\n\n            <div className=\"form\">\n\n                <input \n                    type=\"text\"\n                    name=\"topText\"\n                    className=\"form--input\"\n                    placeholder=\"Top Text\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n\n                <input \n                    type=\"text\"\n                    name=\"bottomText\"\n                    className=\"form--input\"\n                    placeholder=\"Bottom Text\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n                />\n\n                <button \n                className=\"form--button\"\n                onClick={getNewImage}\n                >\n                    Get New Image\n                </button>\n\n                <button \n                className=\"form--button\"\n                // onClick={createMeme}\n                >\n                    Create Meme\n                </button>\n\n            </div>\n\n            <div className=\"preview--meme\">\n                <img className=\"preview--meme--image\" src={meme.randomImage}/>\n                <h2 className=\"preview--meme--text top\">{meme.topText}</h2>\n                <h2 className=\"preview--meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n            \n            \n\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}